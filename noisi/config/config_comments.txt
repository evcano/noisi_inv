
# date_created: (string) added automatically, no need to edit
# project_name: (string) added automatically, no need to edit
# project_path: (string) added automatically, no need to edit
# verbose: (bool) Print info or not (set to false for large runs)
# load_to_memory: (bool) If set to true, arrays of Green's functions and
# noise source model are loaded to memory. This decreases runtime but
# increases memory consumption. Set to false if using densely sampled
# wavefields (in space or time).
# grid_dx_in_m: (float) grid step in meters. 
# At the equator, 1 degree of latitude is approx. 110.5 km
# grid_lat_min: (float) minimum lat in degrees (-90 - 90) 
# grid_lat_max: (float) maximum lat in degrees (-90 - 90)
# grid_lon_min: (float) minimum lon in degrees (-180 - 180)
# grid_lon_max: (float) maximum lon in degrees (-180 - 180)
# synt_data: (string) specify if your synthetics shall be displacement
#                (DIS), velocity (VEL) or acceleration (ACC)
# wavefield_type: (string) set here the type of wavefield you want to use: 
# -- analytic (analytic Green's function for homogeneous membrane wave)
# -- instaseis (use instaseis; need to specify the path to the instaseis
#    database as wavefield_path)
# -- custom (you need to prepare your own wave field if this is set, and
#    specify the path to the files as wavefield_path)
# wavefield_point_force: (float) Force in N applied by each noise source. Note that if 
# setting this very low, the amplitude of the correlations will become very 
# small, and problems with numerical precision can arise.
# wavefield_path: (string) set here the path to instaseis database or your wavefield
# database from another solver (not needed for analytic Green's functions)
# wavefield_sampling_rate: (float) Sampling rate for the instaseis or analytic 
# wavefield_domain: (string) Save in "fourier" or "time" domain 
# waveforms green's functions in Hz.
# wavefield_duration: (float) Duration of prepared green's functions in seconds.
# wavefield_filter: (list of floats) [freq_min, freq_max] of prepared green's functions in Hz.
# wavefield_channel: (string) Synthetics channel (of recording), Z, E, N or "all". This
# also determines which correlation channels (ZZ, ZE, ZN...NN...) are computed.
#### Spatially Variable Grid
# svp_grid: set to true if svp grid is wanted
# svp_dense_antipole: antipole of center is made dense too by 'flipping' the grid, i.e. grid is mirrored at the equator and then shifted
# svp_only_ocean: set to true if all grid points on land are to be removed
# svp_voronoi_area: set to true if voronoi cell surface areas should be calculated. Useful/necessary for strongly heterogenous grids
# svp_station_remove: radius around stations where gridpoints are removed (in degrees)
# svp_plot: set to false if output should not be plotted



### Spatially Variable grid parameters, should be list with same lenghts. If more than one is given the first one is used as background grid and radius of additional grids is given in svp_gamma
# svp_beta: (list of float) steepness of the decrease in grid point density, (high value means rapid increase) 
# svp_gamma: (list of float) radius of additional dense areas (in degrees)
# svp_lat_0: (list of float between -90,90) latitude of centre points, first one is background grid
# svp_lon_0: (list of float between -180,180) longitude of centre points, first one is background grid
# svp_phi_min: (list of float) minimum grid point distance
# svp_phi_max: (list of float) maximum grid point distance
# svp_sigma: (list of float) radius of the area of high grid point density


### Automatic Grid
# auto_data_grid: (bool) set to true if grid should be adapted automatically
# auto_data_path: (string) path to input data, should be .npy file with lat,lon,data
# auto_data_thresh: (float) Data values above this (normalised) will have additional grids
# auto_station_remove: (float) removes gridpoints around stations in given radius (in degrees)

### Automatic Grid parameters
# auto_back_grid_centre: (data or stations) Either data or stations. Sets the centre of the background grid.
# auto_back_grid_phi_min: (float) minimum grid point distance of background grid
# auto_back_grid_phi_max: (float) maximum grid point distance of background grid
# auto_data_grid_phi: (float) additional grid point distance
# auto_data_path: (string) Path to data
# auto_extent: (list of floats) list of lon_min,lon_max,lat_min,lat_max. Set extent where additional grids should be added
# auto_gamma_thresh: (float) radius in which denser grids will be added
